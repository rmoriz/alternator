name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Install cargo-edit
      run: cargo install cargo-edit

    - name: Update dependencies
      run: |
        cargo update
        cargo upgrade --incompatible

    - name: Run tests after update
      run: cargo test --all-features

    - name: Check for security advisories
      run: |
        cargo install cargo-audit
        cargo audit

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: Update dependencies'
        title: 'Automated dependency updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated dependency updates for security and compatibility.
          
          ### Changes
          - Updated Cargo dependencies to latest compatible versions
          - Security audit passed
          - All tests passing
          
          Please review the changes and merge if appropriate.
        branch: automated-dependency-updates
        delete-branch: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Install security scanning tools
      run: |
        cargo install cargo-audit
        cargo install cargo-deny

    - name: Run security audit
      run: cargo audit

    - name: Run cargo-deny
      run: cargo deny check

    - name: Upload results to GitHub Security
      if: failure()
      run: |
        echo "Security issues detected. Please review the audit output."
        exit 1